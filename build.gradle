plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

java.sourceCompatibility = JavaVersion.VERSION_17
sourceCompatibility = JavaVersion.VERSION_17

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ------------- Starter Dependencies --------------------
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation('org.springframework:spring-webmvc')

	// ------------- AOP Dependencies --------------------
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// ------------- Database Dependencies --------------------
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'

	// ------------- Redis Dependencies --------------------
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// ------------- Security Dependencies --------------------
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// ------------- Lombok Dependencies --------------------
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// ----------------------- OpenAPI Dependencies ---------------------------
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// ------------- Actuator Dependencies --------------------
	implementation 'org.springframework.boot:spring-boot-starter-actuator'


	// ------------- Test Dependencies --------------------
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jacoco {
	toolVersion = "0.8.10" // Use the latest version
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
